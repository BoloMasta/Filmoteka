{"mappings":"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","sources":["src/js/components/modal.js"],"sourcesContent":["import { refs } from '../refs/refs';\nimport { getGenresIdsList } from '../api/getGenresIdsList';\nimport { FetchApiMovies } from '../api/fetchMovies';\nimport { renderMoviesList } from '../templates/renderMovies';\nimport { load } from '../library/localStorage';\nimport { addToLibrary } from '../library/localStorage';\nimport { removeFromLibrary } from '../library/localStorage';\nimport { getAllLibraryMovies } from '../library/helper';\nimport { Loader } from './loader';\n\nconst loader = new Loader();\nconst fetchApiMovies = new FetchApiMovies();\n\nexport function addToggleModal() {\n  const refsModal = {\n    modalOpen: document.querySelectorAll('[data-modal-open]'),\n    modalClose: document.querySelector('[data-modal-close]'),\n    modalBackdrop: document.querySelector('.modal-movie__backdrop'),\n  };\n\n  function addModalListener() {\n    refsModal.modalBackdrop.classList.remove(\n      'modal-movie__backdrop--is-hidden'\n    );\n    window.addEventListener('keydown', onEscKeyPress);\n    loader.on();\n  }\n\n  function removeModalListener() {\n    refsModal.modalBackdrop.classList.add('modal-movie__backdrop--is-hidden');\n  }\n\n  function onBackdropClick(event) {\n    if (event.target != event.currentTarget) {\n      return;\n    }\n    removeModalListener();\n  }\n\n  function onEscKeyPress(event) {\n    if (event.code === 'Escape') {\n      removeModalListener();\n    }\n  }\n\n  refsModal.modalOpen.forEach(modal => {\n    modal.addEventListener('click', addModalListener);\n  });\n\n  refsModal.modalClose.addEventListener('click', removeModalListener);\n\n  refsModal.modalBackdrop.addEventListener('click', onBackdropClick);\n  MovieModalCreate();\n}\n\nconst modalMoviePoster = document.querySelector('.modal-movie__poster--img');\nconst modalMovieTitle = document.querySelector('.modal-movie__title');\nconst modalMovieVote = document.querySelector('.modal-movie__vote');\nconst modalMovieVotes = document.querySelector('.modal-movie__votes');\nconst modalMoviePopularity = document.querySelector('.modal-movie__popularity');\nconst modalMovieOriginalTitle = document.querySelector(\n  '.modal-movie__original-title'\n);\nconst modalMovieGenre = document.querySelector('.modal-movie__genre');\nconst modalMovieDescription = document.querySelector('.modal-movie__text');\nconst modalMovieButtonWatched = document.querySelector(\n  '.modal-movie__button--watched'\n);\nconst modalMovieButtonQueued = document.querySelector(\n  '.modal-movie__button--queue'\n);\n\nfunction MovieModalCreate() {\n  const createModalMovie = document.querySelectorAll('.movie-card__item');\n\n  createModalMovie.forEach(movie => {\n    movie.addEventListener('click', event => {\n      modalMoviePoster.src = '';\n      modalMovieTitle.innerHTML = '';\n      modalMovieVote.innerHTML = '';\n      modalMovieVotes.innerHTML = '';\n      modalMoviePopularity.innerHTML = '';\n      modalMovieOriginalTitle.innerHTML = '';\n      modalMovieGenre.innerHTML = '';\n      modalMovieDescription.innerHTML = '';\n\n      modalMovieButtonWatched.dataset.id = '';\n      modalMovieButtonQueued.dataset.id = '';\n\n      event.preventDefault();\n\n      const movieId = movie.id;\n      const movieData = fetchApiMovies.getMovieDetails(movieId);\n\n      movieData.then(value => {\n        MovieModalMurkup(value);\n      });\n      loader.off();\n    });\n\n    let onWatched = false;\n    let onQueue = false;\n\n    load('watchedList')?.forEach(movies => {\n      if (movies.id == movie.id) {\n        onWatched = true;\n      }\n    });\n\n    load('queueList')?.forEach(movies => {\n      if (movies.id == movie.id) {\n        onQueue = true;\n      }\n    });\n\n    let watchedBtn = document.querySelector('.modal-movie__button--watched');\n    let queueBtn = document.querySelector('.modal-movie__button--queue');\n\n    if (onWatched) {\n      watchedBtn.innerHTML = 'On List';\n    }\n    if (onQueue) {\n      queueBtn.innerHTML = 'On List';\n    }\n\n    const checkIfOnList = (button, listType, listTypeText) => {\n      let watched;\n      if (listTypeText == undefined) return;\n      if (listTypeText === 'watched') {\n        watched = onWatched;\n      } else if (listTypeText === 'queue') {\n        watched = onQueue;\n      }\n      if (watched) {\n        removeFromLibrary(movie.id, listType);\n        button.innerHTML = `Add to ${listTypeText}`;\n      } else {\n        addToLibrary(movie.id, listType);\n        button.innerHTML = `Added`;\n      }\n      if (listTypeText === 'watched') {\n        onWatched = !onWatched;\n      } else if (listTypeText === 'queue') {\n        onQueue = !onQueue;\n      }\n    };\n\n    watchedBtn.addEventListener('click', () => {\n      checkIfOnList(watchedBtn, 'watchedList', 'watched');\n      if (\n        document.location.href.includes('library') &&\n        refs.moviesList.dataset.listtype === 'watched'\n      ) {\n        let tempLibraryList = load('watchedList');\n        getAllLibraryMovies(tempLibraryList, 'watchedList');\n      }\n    });\n    queueBtn.addEventListener('click', () => {\n      checkIfOnList(queueBtn, 'queueList', 'queue');\n      if (\n        document.location.href.includes('library') &&\n        refs.moviesList.dataset.listtype === 'queue'\n      ) {\n        let tempLibraryList = load('queueList');\n        getAllLibraryMovies(tempLibraryList, 'queueList');\n      }\n    });\n  });\n}\n\nfunction MovieModalMurkup({\n  id,\n  poster_path,\n  title,\n  original_title,\n  popularity,\n  overview,\n  genres,\n  vote_average,\n  vote_count,\n}) {\n  modalMoviePoster.src = `https://image.tmdb.org/t/p/w500${poster_path}`;\n  modalMovieTitle.innerHTML = title;\n  modalMovieVote.innerHTML = vote_average.toFixed(1);\n  modalMovieVotes.innerHTML = vote_count;\n  modalMoviePopularity.innerHTML = popularity.toFixed(1);\n  modalMovieOriginalTitle.innerHTML = original_title;\n  modalMovieGenre.innerHTML = genres.map(genre => genre.name).join(', ');\n  modalMovieDescription.innerHTML = overview;\n  modalMovieButtonWatched.dataset.id = id;\n  modalMovieButtonQueued.dataset.id = id;\n}\n"],"names":["$cqmI4","parcelRequire","$644ae9dfa4ed5fd0$var$loader","Loader","$644ae9dfa4ed5fd0$var$fetchApiMovies","$lfqeF","FetchApiMovies","$644ae9dfa4ed5fd0$export$58a2b242c2da4af2","refsModal","modalOpen","document","querySelectorAll","modalClose","querySelector","modalBackdrop","addModalListener","classList","remove","window","addEventListener","onEscKeyPress","on","removeModalListener","add","event","code","forEach","modal","target","currentTarget","movie","ref","ref1","$644ae9dfa4ed5fd0$var$modalMoviePoster","src","$644ae9dfa4ed5fd0$var$modalMovieTitle","innerHTML","$644ae9dfa4ed5fd0$var$modalMovieVote","$644ae9dfa4ed5fd0$var$modalMovieVotes","$644ae9dfa4ed5fd0$var$modalMoviePopularity","$644ae9dfa4ed5fd0$var$modalMovieOriginalTitle","$644ae9dfa4ed5fd0$var$modalMovieGenre","$644ae9dfa4ed5fd0$var$modalMovieDescription","$644ae9dfa4ed5fd0$var$modalMovieButtonWatched","dataset","id","$644ae9dfa4ed5fd0$var$modalMovieButtonQueued","preventDefault","movieId","getMovieDetails","then","value","param","poster_path","title","original_title","popularity","overview","genres","vote_average","vote_count","concat","toFixed","map","genre","name","join","off","onWatched","onQueue","$6kpMs","load","movies","watchedBtn","queueBtn","checkIfOnList","button","listType","listTypeText","watched","undefined","removeFromLibrary","addToLibrary","location","href","includes","refs","moviesList","listtype","tempLibraryList","$e07ZM","getAllLibraryMovies"],"version":3,"file":"library.4afb4b0d.js.map"}
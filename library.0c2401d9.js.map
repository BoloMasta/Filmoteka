{"mappings":"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","sources":["src/js/components/modal.js"],"sourcesContent":["import { refs } from '../refs/refs';\nimport { getGenresIdsList } from '../api/getGenresIdsList';\nimport { FetchApiMovies } from '../api/fetchMovies';\nimport { renderMoviesList } from '../templates/renderMovies';\nimport { load } from '../library/localStorage';\nimport { addToLibrary } from '../library/localStorage';\nimport { removeFromLibrary } from '../library/localStorage';\nimport { getAllLibraryMovies } from '../library/helper';\nimport { Loader } from './loader';\n\n\nexport function addToggleModal() {\n  const refsModal = {\n    modalClose: document.querySelector('[data-modal-close]'),\n    modalData: document.querySelector('.modal-movie__backdrop'),\n  };\n\n  function toggleModal() {\n    refsModal.modalData.classList.toggle('modal-movie__backdrop--is-hidden');\n  }\n\n  document.querySelectorAll('[data-modal-open]').forEach(modal => {\n    modal.addEventListener('click', toggleModal);\n  });\n\n  refsModal.modalClose.addEventListener('click', toggleModal);\n\n//   refsModal.modalClose.addEventListener('keydown', function (event) {\n//   if (event.key === 'Escape') {\n//     refsModal.modalClose.classList.add('modal-movie__backdrop--is-hidden');\n//   }\n// });\n}\n\n\nconst modalMoviePoster = document.querySelector('.modal-movie__poster--img');\n\nconst modalMovieTitle = document.querySelector('.modal-movie__title');\n\nconst modalMovieVote = document.querySelector('.modal-movie__vote');\nconst modalMovieVotes = document.querySelector('.modal-movie__votes');\nconst modalMoviePopularity = document.querySelector('.modal-movie__popularity');\nconst modalMovieOriginalTitle = document.querySelector('.modal-movie__original-title');\nconst modalMovieGenre = document.querySelector('.modal-movie__genre');\n\nconst modalMovieDescription = document.querySelector('.modal-movie__text');\n\nconst modalMovieButtonWatched = document.querySelector('.modal-movie__button--watched');\nconst modalMovieButtonQueued = document.querySelector('.modal-movie__button--queue');\n\n\n\nconst createModalMovie = document.querySelectorAll('.movie-card__item');\n\ncreateModalMovie.forEach (movie => {\n    movie.addEventListener('click', event => {\n\n            modalMoviePoster.src = '';\n            modalMovieTitle.innerHTML = '';\n            modalMovieVote.innerHTML = '';\n            modalMovieVotes.innerHTML = '';\n            modalMoviePopularity.innerHTML = '';\n            modalMovieOriginalTitle.innerHTML = '';\n            modalMovieGenre.innerHTML = '';\n            modalMovieDescription.innerHTML = '';\n\n            modalMovieButtonWatched.dataset.id = '';\n            modalMovieButtonQueued.dataset.id = '';\n\n      event.preventDefault();\n\n      const movieId = movie.dataset.id;\n      const movieData = getMovieDetails(movieId);\n      \n      MovieModalMurkup(movieData);\n    });\n  \n  \n  //----------DODAĆ DO BIBLIOTEKI UŻYTKOWNIKA------------//\n  const movieDetails = FetchApiMovies.getMovieDetails(id);\n  console.log(movieDetails);\n  let onWatched = false;\n  let onQueue = false;\n  \n  load('watchedList')?.forEach(movie => {\n    if (movie.id == id) {\n      onWatched = true;\n    }\n  });\n  \n  load('queueList')?.forEach(movie => {\n    if (movie.id == id) {\n      onQueue = true;\n    }\n  });\n  \n   let watchedBtn = document.querySelector('modal-movie__button--watched');\n   let queueBtn = document.querySelector('modal-movie__button--queue');\n\n  if (onWatched) {\n    watchedBtn.innerHTML = 'On List';\n  }\n  if (onQueue) {\n    queueBtn.innerHTML = 'On List';\n  }\n\n  const checkIfOnList = (button, listType, listTypeText) => {\n    let watched;\n    if (listTypeText == undefined) return;\n    if (listTypeText === 'watched') {\n      watched = onWatched;\n    } else if (listTypeText === 'queue') {\n      watched = onQueue;\n    }\n    if (watched) {\n      removeFromLibrary(id, listType);\n      button.innerHTML = `Add to ${listTypeText}`;\n    } else {\n      addToLibrary(id, listType);\n      button.innerHTML = `Added`;\n    }\n    if (listTypeText === 'watched') {\n      onWatched = !onWatched;\n    } else if (listTypeText === 'queue') {\n      onQueue = !onQueue;\n    }\n  };\n\n\n\n  watchedBtn.addEventListener('click', () => {\n    checkIfOnList(watchedBtn, 'watchedList', 'watched');\n    if (\n      document.location.href.includes('library') &&\n      refs.moviesList.dataset.listtype === 'watched'\n    ) {\n      let tempLibraryList = load('watchedList');\n      getAllLibraryMovies(tempLibraryList, 'watchedList');\n    }\n  });\n  queueBtn.addEventListener('click', () => {\n    checkIfOnList(queueBtn, 'queueList', 'queue');\n    if (\n      document.location.href.includes('library') &&\n      refs.moviesList.dataset.listtype === 'queue'\n    ) {\n      let tempLibraryList = load('queueList');\n      getAllLibraryMovies(tempLibraryList, 'queueList');\n    }\n  });\n\n//--------------------------------------------------------------------//\n\n  })\n  \n\n  function MovieModalMurkup ({id, poster_path, title, original_title, popularity, overview, genres, vote_average, vote_count,}) {\n    return\n        modalMoviePoster.src=`https://image.tmdb.org/t/p/w500${movie.poster_path}`;\n        modalMovieTitle.innerHTML = `${movie.title}`;\n        modalMovieVote.innerHTML = `${movie.vote_average}`;\n        modalMovieVotes.innerHTML = `${movie.vote_count}`;\n        modalMoviePopularity.innerHTML = `${movie.popularity}`;\n        modalMovieOriginalTitle.innerHTML = `${movie.original_title}`;\n        modalMovieGenre.innerHTML = `${movie.genres.map(genre => genre.name).join(', ')}`;\n        modalMovieDescription.innerHTML = `${movie.overview}`;\n  \n        modalMovieButtonWatched.dataset.id = movie.id;\n        modalMovieButtonQueued.dataset.id = movie.id;\n  };\n\n\n\n"],"names":["$cqmI4","parcelRequire","$644ae9dfa4ed5fd0$export$58a2b242c2da4af2","refsModal","modalClose","document","querySelector","modalData","toggleModal","classList","toggle","querySelectorAll","forEach","modal","addEventListener","$644ae9dfa4ed5fd0$var$modalMoviePoster","$644ae9dfa4ed5fd0$var$modalMovieTitle","$644ae9dfa4ed5fd0$var$modalMovieVote","$644ae9dfa4ed5fd0$var$modalMovieVotes","$644ae9dfa4ed5fd0$var$modalMoviePopularity","$644ae9dfa4ed5fd0$var$modalMovieOriginalTitle","$644ae9dfa4ed5fd0$var$modalMovieGenre","$644ae9dfa4ed5fd0$var$modalMovieDescription","$644ae9dfa4ed5fd0$var$modalMovieButtonWatched","$644ae9dfa4ed5fd0$var$modalMovieButtonQueued","movie","ref","ref1","event","src","innerHTML","dataset","id","preventDefault","movieId","param","poster_path","title","original_title","popularity","overview","genres","vote_average","vote_count","$644ae9dfa4ed5fd0$var$MovieModalMurkup","getMovieDetails","movieDetails","$lfqeF","FetchApiMovies","console","log","onWatched","onQueue","$6kpMs","load","watchedBtn","queueBtn","checkIfOnList","button","listType","listTypeText","watched","undefined","removeFromLibrary","concat","addToLibrary","location","href","includes","refs","moviesList","listtype","tempLibraryList","$e07ZM","getAllLibraryMovies"],"version":3,"file":"library.0c2401d9.js.map"}